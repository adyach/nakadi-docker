name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

env:
  # TODO: Change variable to your image's name.
  PG_VERSION: 13.6
  PG_IMAGE_NAME: postgres
  ZK_VERSION: 3.6.3
  ZK_IMAGE_NAME: zookeeper
  NAKADI_IMAGE_NAME: nakadi

jobs:
  # Push image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

#      - name: Build nakadi image
#        run: docker build . --file Dockerfile --tag image
#
#      - name: Push nakadi image
#        run: |
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#          IMAGE_ID=ghcr.io/${{ github.repository }}/$NAKADI_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=latest
#          docker tag image $IMAGE_ID:latest
#          docker push $IMAGE_ID:latest
#
#      - name: Build postgres image
#        run: docker build . --file Dockerfile-postgres --tag image
#
#      - name: Push postgres image
#        run: |
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#          IMAGE_ID=ghcr.io/${{ github.repository }}/$PG_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$PG_VERSION
#          docker tag image $IMAGE_ID:$PG_VERSION
#          docker push $IMAGE_ID:$PG_VERSION
#
#      - name: Build zookeeper image
#        run: docker build . --file Dockerfile-zookeeper --tag image
#
#      - name: Push zookeeper image
#        run: |
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#          IMAGE_ID=ghcr.io/${{ github.repository }}/$ZK_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$ZK_VERSION
#          docker tag image $IMAGE_ID:$ZK_VERSION
#          docker push $IMAGE_ID:$ZK_VERSION

      - name: Start Nakadi
        run: docker-compose -f docker-compose-github.yml up -d
      - name: Check running containers
        run: docker ps -a
      - name: Check Nakadi lists event types
        run: |
          sleep 30
          while [[ x -lt 10 ]]; do
            res=$(curl -s -w "%{http_code}" -o /dev/null http://localhost:8080/event-types/nakadi.access.log)
            if ((res == 200)); then
              return
            fi
            sleep 10
          done

